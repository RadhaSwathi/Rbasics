dplyr
dplyr
install.packages("dplyr")
install.packages("ggplot2")
install.packages("tidyr")
install.packages("purr")
install.packages("rvest")
install.packages("stringr")
install.packages("lubridate")
install.packages("forcats")
install.packages("ggmap")
install.packages("plotly")
install.packages("prophet")
install.packages("ROCR")
install.packages("lmtest")
install.packages("car")
install.packages("conjoint")
install.packages("survival")
install.packages("mice")
install.packages("rpart")
install.packages("party")
install.packages("caret")
install.packages("randomForest")
install.packages("e1071")
q()
q()
q()
q()
q()
rm(list = ls())
gc()
str(iris)
iris
iris
view(iris)
View(iris)
summary(iris)
data("bodyfat", package="TH.data")
str(bodyfat)
library(MASS)
dat()
data()
str(cats)
dim(iris)
names(iris)
v
attributes(iris)
iris$names
iris[1:5,]
head(iris)
str(iris[1:10, "Sepal.Length"])
str(iris$Sepal.Length[1:10])
q()
str(iris)
quantile(iris$Sepal.Length)
var(iris$Sepal.Length)
?var
hist(iris$Sepal.Length)
table(iris$Species)
table(iris$Sepal.Length)
pie(table(iris$Species))
cov(iris$Sepal.Length, iris$Petal.Length)
cov(iris[,1:4])
cor(iris$Sepal.Length, iris$Petal.Length)
cor(iris[,1:4])
boxplot(iris$Sepal.Length, data=iris)
boxplot(Sepal.Width~Species, data=iris)
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(jitter(iris$Sepal.Length), jitter(iris$Sepal.Width))
pairs(iris)
pairs(iris)
?pairs
pairs(iris)
library(MASS)
parcoord(iris[1:4], col=iris$Species)
library(ggplot2)
qplot(Sepal.Length, Sepal.Width, data=iris, facets=Species ~.)
qqplot(iris$Sepal.Length,iris$Sepal.Width)
n <- 20
seq(0, n, by = 1)
seq(0, n, by = 2)
seq(0, n, by = 1)k <- seq(0, n, by = 1)
k <- seq(0, n, by = 1)
plot (k, dbinom(k, n, 0.25), type = "l", ylab = "density", main = "dbinom")
plot (k, qbinom(k, n, 0.25), type = "l", ylab = "density", main = "dbinom")
?dbinom
plot (k, pbinom(k, n, 0.25), type = "l", ylab = "density", main = "dbinom")
x <- seq(0, 15, 1)
plot (x, dpois(x, 3))
x <- seq(-10, 10, by = .1)
y <- dnorm(x, mean = 2.5, sd = 0.5)
plot(x,y)
?runif
u <- runif(20)
u
u <- runif(20, 0, 3)
u
set.seed(1)
runif(20, 0, 3)
?ifelse
?dbinom
?rnorm
setwd('C:\\Users\\admin\\Desktop\\Dipayan')
getwd()
housesalesdata <- read.csv('housesalesdata.csv')
housefeaturesdata <- read.csv('housefeatures.csv')
housedata <- merge(housesalesdata, housefeaturesdata, by="ID")
library("ade4", lib.loc="~/R/win-library/3.4")
install.packages("C:/Users/admin/Downloads/MASS_7.3-49.zip", repos = NULL, type = "win.binary")
library("MASS", lib.loc="~/R/win-library/3.4")
library("ade4", lib.loc="~/R/win-library/3.4")
library("AlgDesign", lib.loc="~/R/win-library/3.4")
library("BH", lib.loc="~/R/win-library/3.4")
library("bindrcpp", lib.loc="~/R/win-library/3.4")
library("bitops", lib.loc="~/R/win-library/3.4")
library("car", lib.loc="~/R/win-library/3.4")
library("caret", lib.loc="~/R/win-library/3.4")
library("coin", lib.loc="~/R/win-library/3.4")
library("CVST", lib.loc="~/R/win-library/3.4")
detach("package:CVST", unload=TRUE)
detach("package:coin", unload=TRUE)
library("coin", lib.loc="~/R/win-library/3.4")
library("CVST", lib.loc="~/R/win-library/3.4")
install.packages("RColorBrewer")
library("RColorBrewer", lib.loc="~/R/win-library/3.4")
display.brewer.all()
setwd('C:\\Users\\admin\\Desktop\\Dipayan')
getwd()
housesalesdata <- read.csv('housesalesdata.csv')
housefeaturesdata <- read.csv('housefeatures.csv')
housedata <- merge(housesalesdata, housefeaturesdata, by="ID")
summary(housedata)
summary(housedata)
summary(housedata)
numeric_df <- Filter(is.numeric, housedata)
cor<-cor(numeric_df[,-1], use = 'complete.obs')
write.csv(cor, 'cormatrix.csv')
rm(list=ls())
setwd('F:/SMDM Hyderabad 2425032018/Case Study/stockprices')
stockreturn<-read.csv("stockpricedata.csv", header=TRUE)
View(stockreturn)
str(stockreturn)
summary(stockreturn)
meanrtongc<-mean(stockreturn$rtongc, trim=0, na.rm=FALSE)
meanrtongc<-mean(stockreturn$rtongc, trim=5, na.rm=FALSE)
meanrtongc<-mean(stockreturn$rtongc, trim=0.5, na.rm=FALSE)
varrtongc<-var(stockreturn$rtongc)
sdrtongc<-sd(stockreturn$rtongc)
s<-quantile(stockreturn$rtongc)
IQR(stockreturn$rtongc)
s[4]-s[2]
hist(stockreturn$rtongc)
boxplot(stockreturn$rtongc)
stockreturn$rtongc[stockreturn$rtongc<0.2]
stockreturn$rtongc[stockreturn$rtongc>-0.2]
boxplot(stockreturn$rtongc)
stockreturn$rtongc[stockreturn$rtongc<0.2]<-NA
stockreturn$rtongc[stockreturn$rtongc>-0.2]<NA
boxplot(stockreturn$rtongc,is.na=TRUE)
boxplot(stockreturn$rtongc,is.na=FALSE)
stockreturn$rtongc[stockreturn$rtongc>0.2]<-NA
stockreturn$rtongc[stockreturn$rtongc<-0.2]<-NA
boxplot(stockreturn$rtongc,is.na=TRUE)
boxplot(stockreturn$rtongc,is.na=FALSE)
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
y1 <- remove_outliers(stockreturn$rtongc)
par(mfrow = c(1, 3))
boxplot(stockreturn$rtongc)
boxplot(y1)
boxplot(y1, range=0.5)
rm(list=ls())
setwd('F:/SMDM Hyderabad 2425032018/Case Study/stockprices')
### Read the data file
stockreturn<-read.csv("stockpricedata.csv", header=TRUE)
### Check for the structure of the data
str(stockreturn)
### Summarize the data
summary(stockreturn)
###Mean
meanrtongc<-mean(stockreturn$rtongc, trim=0.5, na.rm=FALSE)
### Median
medianrtongc<-median(stockreturn$rtongc, trim=0, na.rm=FALSE)
### Mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
modertogc<-getmode(stockreturn$rtongc)
### Variance
varrtongc<-var(stockreturn$rtongc)
###Standard Deviation
sdrtongc<-sd(stockreturn$rtongc)
### Quartiles
s<-quantile(stockreturn$rtongc)
### Interquartile Range
IQR(stockreturn$rtongc)
### Interquartile range using quantile command
s[4]-s[2]
### Histogram - A histogram is a type of bar chart
### that graphically displays the frequencies of a data set.
hist(stockreturn$rtongc)
### A box plot, also called a box-and-whisker plot, is a chart
### that graphically represents the five most important descriptive
### values for a data set. These values include the minimum value,
### the first quartile, the median, the third quartile, and the maximum value.
boxplot(stockreturn$rtongc)
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
y1 <- remove_outliers(stockreturn$rtongc)
par(mfrow = c(1, 3))
boxplot(stockreturn$rtongc)
boxplot(y1)
boxplot(y1, range=0.5)
y2<-remove_outliers(stockreturn$rtairtel)
y3<-remove_outliers(stockreturn$rtsuzuki)
y4<-remove_outliers(stockreturn$rtsuzlon)
library(reshape)
data<-data.frame(y1,y2,y3,y4)
meltData <- melt(data)
boxplot(data=meltData, value~variable, na.rm=TRUE)
library(reshape)
library(reshape)
data<-data.frame(y1,y2,y3,y4)
View(data)
data<-data.frame(y1,y2,y3,y4)
View(data)
meltData <- melt(data)
rm(list=ls())
library(reshape)
setwd('F:/SMDM Hyderabad 2425032018/Case Study/stockprices')
### Read the data file
stockreturn<-read.csv("stockpricedata.csv", header=TRUE)
### Check for the structure of the data
str(stockreturn)
### Summarize the data
summary(stockreturn)
###Mean
meanrtongc<-mean(stockreturn$rtongc, trim=0.5, na.rm=FALSE)
### Median
medianrtongc<-median(stockreturn$rtongc, trim=0, na.rm=FALSE)
### Mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
modertogc<-getmode(stockreturn$rtongc)
### Variance
varrtongc<-var(stockreturn$rtongc)
###Standard Deviation
sdrtongc<-sd(stockreturn$rtongc)
### Quartiles
s<-quantile(stockreturn$rtongc)
### Interquartile Range
IQR(stockreturn$rtongc)
### Interquartile range using quantile command
s[4]-s[2]
### Histogram - A histogram is a type of bar chart
### that graphically displays the frequencies of a data set.
hist(stockreturn$rtongc)
### A box plot, also called a box-and-whisker plot, is a chart
### that graphically represents the five most important descriptive
### values for a data set. These values include the minimum value,
### the first quartile, the median, the third quartile, and the maximum value.
boxplot(stockreturn$rtongc)
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
y1 <- remove_outliers(stockreturn$rtongc)
par(mfrow = c(1, 3))
boxplot(stockreturn$rtongc)
boxplot(y1)
boxplot(y1, range=0.5)
y2<-remove_outliers(stockreturn$rtairtel)
y3<-remove_outliers(stockreturn$rtsuzuki)
y4<-remove_outliers(stockreturn$rtsuzlon)
y4[y4 < -0.2] <- NA
y4[y4 > 0.2] <- NA
#### Histogram plots provide only the range of frequency of observations
#### while box plots are better in telling where several parameters of a
### distribution lie, example mean and variances that bar plots cannot.
### Box plots are thus used as an effective comparative tool if one has several distributions.
#### Plotting multiple box plots This is the advantage
library(reshape)
data<-data.frame(y1,y2,y3,y4)
install.packages("reshape")
rm(list=ls())
library(reshape)
setwd('F:/SMDM Hyderabad 2425032018/Case Study/stockprices')
### Read the data file
stockreturn<-read.csv("stockpricedata.csv", header=TRUE)
### Check for the structure of the data
str(stockreturn)
### Summarize the data
summary(stockreturn)
###Mean
meanrtongc<-mean(stockreturn$rtongc, trim=0.5, na.rm=FALSE)
### Median
medianrtongc<-median(stockreturn$rtongc, trim=0, na.rm=FALSE)
### Mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
modertogc<-getmode(stockreturn$rtongc)
### Variance
varrtongc<-var(stockreturn$rtongc)
###Standard Deviation
sdrtongc<-sd(stockreturn$rtongc)
### Quartiles
s<-quantile(stockreturn$rtongc)
### Interquartile Range
IQR(stockreturn$rtongc)
### Interquartile range using quantile command
s[4]-s[2]
### Histogram - A histogram is a type of bar chart
### that graphically displays the frequencies of a data set.
hist(stockreturn$rtongc)
### A box plot, also called a box-and-whisker plot, is a chart
### that graphically represents the five most important descriptive
### values for a data set. These values include the minimum value,
### the first quartile, the median, the third quartile, and the maximum value.
boxplot(stockreturn$rtongc)
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
y1 <- remove_outliers(stockreturn$rtongc)
par(mfrow = c(1, 3))
boxplot(stockreturn$rtongc)
boxplot(y1)
boxplot(y1, range=0.5)
y2<-remove_outliers(stockreturn$rtairtel)
y3<-remove_outliers(stockreturn$rtsuzuki)
y4<-remove_outliers(stockreturn$rtsuzlon)
y4[y4 < -0.2] <- NA
y4[y4 > 0.2] <- NA
#### Histogram plots provide only the range of frequency of observations
#### while box plots are better in telling where several parameters of a
### distribution lie, example mean and variances that bar plots cannot.
### Box plots are thus used as an effective comparative tool if one has several distributions.
#### Plotting multiple box plots This is the advantage
library(reshape)
data<-data.frame(y1,y2,y3,y4)
meltData <- melt(data)
View(meltData)
View(data)
View(meltData)
boxplot(data=meltData, value~variable, na.rm=TRUE)
dbinom(27, size=30, prob=0.8)
dbinom(24, size=30, prob=0.8)
pbinom(24, size=30, prob=0.8)
pbinom(15, size=30, prob=0.5)
dbinom(15, size=30, prob=0.5)
?dpois
dpois(12, 6, log = FALSE)
dpois(6, 6, log = FALSE)
ppois96,6,log=false)
ppois(6,6,log=false)
ppois(6,6,log=FALSE)
setwd('F:/SMDM Hyderabad 2425032018/Case Study/PKV')
rm(list=ls())
setwd('F:/SMDM Hyderabad 2425032018/Case Study/PKV')
income<-read.csv("Central Limit Theorem.csv", header=TRUE)
j=1000 ### repetitions
samplesize=5
s<- data.frame(matrix(0, ncol = j, nrow = samplesize))
d<- data.frame(matrix(0, ncol = 1, nrow = j))
for (i in 1:j){
s[,i]<- (sample(income[i,1], replace=TRUE, size=samplesize))
d[i,1]<-mean(s[,i])
}
View(s)
View(d)
colnames(d) <- "means of samples"
histogram(d)
hist(d)
hist(d$means of samples)
View(d)
colnames(d) <- "meansofsamples"
hist(d$meansofsamples)
samplesize=25
s<- data.frame(matrix(0, ncol = j, nrow = samplesize))
d<- data.frame(matrix(0, ncol = 1, nrow = j))
for (i in 1:j){
s[,i]<- (sample(income[i,1], replace=TRUE, size=samplesize))
d[i,1]<-mean(s[,i])
}
colnames(d) <- "meansofsamples"
hist(d$meansofsamples)
